volumes:
  wsprofile:
    driver: ${VOLUMES_DRIVER}

networks:
  default:
  shared-proxy:
    driver: overlay
    external: true

services:
  ### Workspace Utilities ##################################
  workspace:
    image: ttungbmt/workspace
    container_name: workspace
    build:
      context: ./workspace
      args:
        - DISABLE_CRON=1
#    restart: unless-stopped
    privileged: true
    working_dir: ${APP_CODE_PATH_CONTAINER}
    tty: true
    environment:
      - DOCKER_HOST=tcp://${DOCKER_HOST_IP}:${DOCKER_HOST_PORT}
      - DOCKER_TLS_VERIFY=
      - CHOKIDAR_USEPOLLING=true
      - GIT_USERNAME=${GIT_USERNAME}
      - GIT_EMAIL=${GIT_EMAIL}
      - NODE_OPTIONS=--openssl-legacy-provider
    volumes:
      - wsprofile:/home/ubuntu
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
      - "${WORKSPACE_SUPERVISOR_PORT}:9001"
      # - 8080
      # - 8000
      # - 3000
      # - 8022:8022
    networks:
      - shared-proxy
      - default


  ### Traefik ##############################################
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    restart: unless-stopped
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - shared-proxy
      - default
